科目名: プログラミング実習III
課題: B9
番号: 37022431
氏名: 西 葵斗
作成: 2023年12月5日

----------------------------------------

[課題 9.1]

c++の動作確認

実行結果は次の通りである. 

    $ ./a
    円とウォンの為替
    n = 100
    yen = 100  won = 893

 

円の数字を入れてその値をウォンに変換するプログラムを作成した。調べたときは
一円が9.93ウォンだったのでそれに掛け算した値を出力させた。基本的にはc言語
とは書き方が違うだけで大きく異なる点はなかった。
----------------------------------------

[課題 9.2]

swap関数の実装

実行結果は次の通りである. 

    $ ./a
    before
    a = 5
    b = 10

    after
    a = 10
    b = 5


swap関数自体は今まで何度も使ってきたのですぐにかけた。コンパイル時に記述
する部分はprintfと書き方が異なるので扱いづらい。
----------------------------------------

[課題 9.3]

スタックの動作確認をする

実行結果は次の通りである. 

    $ ./a
    9
    8
    2
    3
    5



作成したプログラム

    #include <iostream>
    #include <assert.h> // assert を使うためのヘッダ

    class stack {
        private:
        static const int max = 100;
        int data[max];
        int sp;
        public:
        void push(int); // データをプッシュする
        void pop(); // データをポップする
        bool empty() const; // スタックが空のとき true を返す
        int top() const; // スタックトップのデータを返す
        int size() const; // 現在格納されているデータ数を返す
        stack(); // コンストラクタ
        ~stack(); // デストラクタ
    };

    void stack::push(int d) {
        assert(sp<max);
        data[sp++] = d;
    }
    

    void stack::pop() {
    assert(0<sp);
    --sp;
    }
    

    bool stack::empty() const {
        return sp==0;
    }

    int stack::top() const {
        return data[sp-1];
    }

    int stack::size() const {
        return sp;
    }

    stack::stack() {sp = 0;}

    stack::~stack() {}


    int main(void) {
        stack s; // stack 型変数の宣言
        s.push(5); // s = (5)
        s.push(8); // s = (5 8)
        s.push(9); // s = (5 8 9)
        std::cout << s.top() << std::endl; // 9 を表示
        s.pop(); // s = (5 8)
        std::cout << s.top() << std::endl; // 8 を表示
        s.pop(); // s = (5)
        s.push(3); // s = (5 3)
        std::cout << s.size() << std::endl; // s のサイズは 2
        while(!s.empty()) {
            std::cout << s.top() << std::endl;
            s.pop();
        }
        return 0;
    }

s.popで先頭の要素9、そして8を削除して、最後に3を追加することで残った
3と5が順番にきちんと出力されている。
c++でも構造体が使えることを知った。

----------------------------------------

[課題 9.4]

c++での動的割り当ての実装

実行結果は次の通りである. 

    $ ./a
    max = 100
    9
    8
    2
    3
    5

privateとpublicがいまいちわからなくて、privateがデータ内部からは直接
使用ず、publicがそれ以下のメンバ関数が外部から使用できるということを再
度確認してから記述した。
----------------------------------------

[課題 9.5]

stackにequal(const stack&, const stack&) を追加したバージョンを作成。

実行結果は次の通りである. 

    $ ./a
    0
    1


s1が5,8,9でs2が5,8,9,10で最初の判定では異なっているのできちんと0が返さ
れている。そしてs2.pop()でs2の先頭要素の10が排除されるのでその後は1で同
じになっていることが確認できた。
----------------------------------------

[課題 9.6]

 [List 9.22], [List 9.23]にComplex(double)を作成。

実行結果は次の通りである. 

    $ ./a
    1.11+2.22i
    3.33+4.44i
    9.99+88.88i
    5.55+0i
    1.11+2.22i
 

新たにComplex(double)をクラスに追加して虚部を0.0にし、引数に5.55
を設定した。
----------------------------------------

[課題 9.7]

減算と乗算を定義してmainで扱う。

実行結果は次の通りである. 

    $ ./a
    -0.65+1.32i
    -5+10i



Complex operator+(Complex a, Complex b)を参考にして記述したため、
実部と虚部の計算をするだけなので特に問題がなかった。
----------------------------------------

[課題 9.8]

 出力の<<演算をoperatorで表す。

実行結果は次の通りである. 

    $ ./a
    1+2i
    1+3i
    1+2i
    2+3i
    2+4i
    2+3i


 出力の<<演算も同じようにできることを理解した。
----------------------------------------

[課題 B9 の感想]

初めてC++を学習したが考え方はｃとほぼ同じであるが、記述方法が異なるため、
新たに記述方法を覚えなければならなかった。クラスという構造体と関数群が
含まれる概念があるため、C言語よりも幅広い応用ができると思った。

