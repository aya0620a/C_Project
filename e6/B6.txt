
科目名: プログラミング実習III
課題: B1
番号: 37022431
氏名: 西　葵斗
作成: 2023年11月7日

----------------------------------------

[課題 6.1]
リスト処理について理解する


実行結果は次の通りである. 
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e6/6_1
$ ./a
input = 3
input = 5
input = 4
input = 3
input =         control+dで入力の終了の確認


aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e6/6_1
$ ./a
input = 3
[3]
input = 4
[43]
input = 5
[543]
input = 6
[6543]
input = 7
[76543]
input = 8
[876543]
input =

----------------------------------------
ノードに情報を加えるときにポインタをセットしなおしたりと
すこし順番を考えるのが難しいと思った。

----------------------------------------

[課題 6.2]
入力した値と同じ節点を探し処理を行うようにする。


実行結果は次の通りである. 
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e6/6_2
$ ./a
input = 3
[3]
input = 5
[53]
input = 4
[453]
input = 3
[45-3]
input =

----------------------------------------
return NULLの位置が間違っていたため直前の値でしか判定ができていなかった。

----------------------------------------
[課題 6.3]
前問のlist_findを使ってlist_insertを新しく作る。


実行結果は次の通りである. 
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e6/6_3
$ ./a
input = 3
[3]
input = 5
[53]
input = 3
[53]
input = 4
[453]
input =


----------------------------------------
結果は期待通り、3が二回目に入ることはなかった。

----------------------------------------
[課題 6.4]



実行結果は次の通りである. 
----------------------------------------
n=5000
cpu = 0.031 [sec]
cpu = 0.031 [sec]
cpu = 0.063 [sec]

n=10000
cpu = 0.14 [sec]
cpu = 0.141 [sec]
cpu = 0.297 [sec]

n=15000
cpu = 0.343 [sec]
cpu = 0.328 [sec]
cpu = 0.672 [sec]

n=20000
cpu = 0.593 [sec]
cpu = 0.547 [sec]
cpu = 1.25 [sec]

n=25000
cpu = 0.953 [sec]
cpu = 0.968 [sec]
cpu = 2.016 [sec]


----------------------------------------
まず、リスト内を走行することによりnの値が5000を大きくなるにつれて約1.6,7倍
大きくなっていっていることが分かる。これは乱数が多くなるほど、リストに新しい
要素を挿入するのに時間がかかってしまい、さらにlist_findで探索する数がそもそ
も多くなってしまい、最後まで探索する時間が多くなってしまうからである。

----------------------------------------
[課題 6.5]



実行結果は次の通りである. 
----------------------------------------
$ ./a
input = 3
[3]
input = 5
[53]
input = 3
[5]
input = 4
[45]
input = 4
[5]
input =

----------------------------------------
list_findからvalと同じ値をもつかの分岐をし、直前のノードpをみつけ
てpの次のノードを削除することによってできた。

----------------------------------------

[課題 6.9]



実行結果は次の通りである. 
----------------------------------------
$ ./a
input = 3
[ 3 ]
input = 5
[ 3 5 ]
input = 3
[ 3 5 ]
input = 4
[ 3 4 5 ]
input =

----------------------------------------
(a)の問題はすでにあるデータと同じであるときの条件を追加するだけなので
簡単であった。
(b)は表示中に木を中央順でたどる必要があることで対処した。

----------------------------------------

[課題 B6 の感想]

R1 ではポインタについて学んだ. ポインタとは, 〜であり, 〜ということが分
かった.

面白かった/苦労した, etc. 