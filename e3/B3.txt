科目名: プログラミング実習III
課題: B3
番号: 37022431
氏名: 西　葵斗
作成: 2023年10月10日

----------------------------------------

[課題 3.1]

int型とdouble型の変数の番地を表示するプログラムの作成。

実行結果は次の通りである. 

--------------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_1
$ gcc -Wall pointer.c

aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_1
$ ./a
a: 0xffffcbfc, b: 0xffffcbf8
x: 0xffffcbf0, y: 0xffffcbe8
---------------------------------------------

aの番地からbの番地の差は4バイト分であり、これはint型の変数は4バイトであるから
である。bからxでは8バイト文で、これはdouble型の変数は8バイトであるからである。
xからyもこれと同様である。
----------------------------------------

[課題 3.2]

番地を用いて変数の書き換えをする


実行結果は次の通りである
----------------------------------------
a: 0xffffcbfc, b: 0xffffcbf8
x: 0xffffcbf0, y: 0xffffcbe8

a の値 = 11
b の値 = 22
x の値 = 3
y の値 = 4

after
a の値 = 1234
b の値 = 5678
x の値 = 99.9
y の値 = 12.3
----------------------------------------
上記のように番地を使って値の書き換えをすることが出来た。double型であるとき
にはdobule型で指定する必要があることに注意したい。
----------------------------------------

[課題 3.3]

ポインタ変数を用いて計算を行う。

実行結果は次の通りである
----------------------------------------
$ ./a
番地の表示
a: 0xffffcbf4, b: 0xffffcbf0
x: 0xffffcbe8, y: 0xffffcbe0

b内容 = 26
x内容 = 6.2

番地を入力 : 0xffffcbe8
0xffffcbe8 番地の内容は 6.2000
番地を入力 : 0xffffcbe0
0xffffcbe0 番地の内容は 4.1000
----------------------------------------
xの番地の値がきちんと更新されていることが分かった。計算するときに掛け算の
場合は*がややこしくなるので注意したい。

----------------------------------------
[課題 3.4]

商をq番地に余りをr番地の変数に格納して返す関数を作成する。 


実行結果は次の通りである
----------------------------------------
$ ./a
x / y = 3 ... 1
----------------------------------------
コードのテンプレートがあったのですぐに作成で出来た。

ポインターの計算についてはとくに問題はない。
----------------------------------------
[課題 3.5]

相加平均と相乗平均を番地に格納する関数を作成する。


実行結果は次の通りである
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_5
$ gcc ave6.o ave6main.o

aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_5
$ ./a < ave-in.txt > out.txt
2つの実数 a, b を入力して下さい: 2つの実数 a, b を入力して下さい: 2つの実数 a, b を入力して下さい: 2つの実数 a, b を入力して下さい:
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_5
$ diff -w out.txt ave-exp.txt
----------------------------------------
分割コンパイラを使ったが特に問題がなかった。

----------------------------------------
[課題 3.6]

qeq2.cを解の個数を返り値としてかえすように変更


実行結果は次の通りである
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_6
$ ./a <qeq3-in.txt > out.txt1

aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_6
$ diff -w out.txt qeq-exp.txt
----------------------------------------
前回の問題の関数をすこし変更する程度の問題だったので特に問題がなかった。

----------------------------------------
[課題 3.7]

int point_scan(point_t *p)とdouble dist(point_t *p1, point_t *p2)
を2_3の課題に実装する。


実行結果は次の通りである
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_7
$ ./a < dist-in.txt > out.txt
x = y = x = y = x = y = x = y = x = y = x = y = x =
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_7
$ diff -w out.txt 
----------------------------------------
p1->xのようにすこし覚えにくい書き方なので、復習をして覚えていきたい。
----------------------------------------
[課題 3.8]

アドレスについての確認をする。

実行結果は次の通りである
----------------------------------------
aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_8
$ gcc -Wall arrayp.c

aotom@2525-Aoto-Surface-Laptop4 ~/pro3/e3/3_8
$ ./a
5
x[0]のアドレス:0xffffcbd0
x[1]のアドレス:0xffffcbd4
x[2]のアドレス:0xffffcbd8
x[3]のアドレス:0xffffcbdc
x[4]のアドレス:0xffffcbe0

xのアドレス:0xffffcbd0

x+0のアドレス:0xffffcbd0
x+0の値:0
x+1のアドレス:0xffffcbd4
x+1の値:10
x+2のアドレス:0xffffcbd8
x+2の値:20
x+3のアドレス:0xffffcbdc
x+3の値:30
x+4のアドレス:0xffffcbe0
x+4の値:40

p+2の値(アドレス):0xffffcbd8
pの値:20

----------------------------------------
2についてはint型であるため8バイトずつ増えている。
3は先頭アドレスが表示されるのでx+0のアドレスが表示される。
4はx+0はx[0]というようにa[]と*aは同じアドレスになることが分かった。
5については4によって最初に初期化したx[]の値が表示されている。
6ついてはポインタ変数pにx[2]の番地が代入されるのでx+2と同じように
出力される。

----------------------------------------
[課題 3.9]

a[0]~a[n-1]の平均値と最大値を格納する関数を作成。


実行結果は次の通りである
----------------------------------------
5.500 10

-12.500 -6
----------------------------------------

前問のa[]と*aが同じということを使って*maxとa[i]を比べるようにプログラムした。

----------------------------------------
[課題 3.10]

サイコロの目の和の分布について調べる。


実行結果は次の通りである
----------------------------------------
$ ./a
サイコロを振る回数 n = 500
 3:     18
 4:     32
 5:     63
 6:     62
 7:     89
 8:     68
 9:     60
10:     42
11:     33
12:     15
13:      1
14:      1
15:      1
16:      0
17:      0
18:      0

$ ./a
サイコロを振る回数 n = 700
 3:     36
 4:     65
 5:     76
 6:     83
 7:    107
 8:    100
 9:     75
10:     74
11:     38
12:     28
13:      0
14:      0
15:      3
16:      0
17:      0
18:      0

$ ./a
サイコロを振る回数 n = 1000
 3:     48
 4:     86
 5:    105
 6:    135
 7:    166
 8:    125
 9:    113
10:     83
11:     66
12:     35
13:      3
14:      1
15:      1
16:      0
17:      0
18:      0

----------------------------------------
これらの結果を見ると回数を変更しても大体は平均値の7や8が最も多く、
それに離れるにつれ回数が減っていくという結果が得られた。
----------------------------------------

[課題 B3 の感想]

春学期に学習したポインタについて復習をした。使い方を少し忘れたり、新しい
ことを学んで複雑に考えてしまったことがあったがきちんと復習しておきたい。